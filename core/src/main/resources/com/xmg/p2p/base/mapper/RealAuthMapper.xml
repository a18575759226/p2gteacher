<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmg.p2p.base.mapper.RealAuthMapper" >
  <resultMap id="BaseResultMap" type="com.xmg.p2p.base.domain.RealAuth" >
    <id column="id" property="id"  />
	<result column="image2" property="image2"  />
	<result column="sex" property="sex"  />
	<result column="image1" property="image1"  />
	<result column="bornDate" property="bornDate"  />
	<result column="address" property="address"  />
	<result column="remark" property="remark"  />
	<result column="auditTime" property="auditTime"  />
	<result column="state" property="state"  />
	<result column="applyTime" property="applyTime"  />
	<result column="realName" property="realName"  />
	<result column="idNumber" property="idNumber"  />
	  <association property="applier" javaType="com.xmg.p2p.base.domain.Logininfo" columnPrefix="ap_">
		  <id column="id" property="id"/>
		  <result column="username" property="username"/>
	  </association>
	  <association property="auditor" javaType="com.xmg.p2p.base.domain.Logininfo" columnPrefix="au_">
		  <id column="id" property="id"/>
		  <result column="username" property="username"/>
	  </association>
  </resultMap>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
    insert into realAuth 
    (image2,sex,auditor_id,image1,bornDate,address,remark,auditTime,state,applyTime,realName,applier_id,idNumber)
    values 
    (#{image2},#{sex},#{auditor.id},#{image1},#{bornDate},#{address},#{remark},#{auditTime},#{state},#{applyTime},#{realName},#{applier.id},#{idNumber})
  </insert>
  
  <update id="updateByPrimaryKey">
    update realAuth
    set
	    image2=#{image2},
	    sex=#{sex},
	    auditor_id=#{auditor.id},
	    image1=#{image1},
	    bornDate=#{bornDate},
	    address=#{address},
	    remark=#{remark},
	    auditTime=#{auditTime},
	    state=#{state},
	    applyTime=#{applyTime},
	    realName=#{realName},
	    applier_id=#{applier.id},
	    idNumber=#{idNumber}
    where id = #{id}
  </update>
  
  <sql id="base_column">
  	r.id,r.image2,r.sex,r.image1,r.bornDate,r.address,r.remark,r.auditTime,r.state,r.applyTime,
           r.realName,r.idNumber,
		    ap.id as ap_id,ap.username as ap_username,
		    au.id as au_id,au.username as au_username
  </sql>	
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select <include refid="base_column" />
    from realAuth r
         LEFT JOIN logininfo ap on(r.applier_id = ap.id)
         LEFT JOIN logininfo au on(r.auditor_id = au.id)
    where r.id = #{id}
  </select>
  
  <sql id="base_where">
  	<where>
  		<if test="beginDate!=null">
            AND r.applyTime &gt;= #{beginDate}
        </if>
        <if test="endDate!=null">
            AND r.applyTime &lt;= #{endDate}
        </if>
        <if test="state>-1">
            AND r.state = #{state}
        </if>
  	</where>
  </sql>
  
  <select id="queryForCount" resultType="int">
  	SELECT COUNT(r.id)
  	FROM realauth r
  	<include refid="base_where" />
  </select>
  
  <select id="query" resultMap="BaseResultMap">
  	SELECT <include refid="base_column"/>
  	FROM realAuth r
         LEFT JOIN logininfo ap on(r.applier_id = ap.id)
         LEFT JOIN logininfo au on(r.auditor_id = au.id)
    <include refid="base_where" />
    LIMIT #{start},#{pageSize}
  </select>

</mapper>